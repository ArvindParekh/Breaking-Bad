{"ast":null,"code":"var _jsxFileName = \"/home/arvind/Documents/Drive A/Temporary/React/try-vite/Breaking Bad/src/components/App.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport styles from \"../styles/App.css\";\nimport elements from \"../elements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  function breakify(string) {\n    const length = string.length;\n    let result = [\"\", \"\", \"\"];\n    for (let i = 0; i < length; i++) {\n      const oneChar = string[i].toUpperCase();\n      const twoChar = `${oneChar}${string[i + 1]}`;\n      if (elements.includes(twoChar)) {\n        result = [string.slice(0, i), twoChar, string.slice(i + 2, length)];\n        console.log(\"Two char result \", result);\n        break;\n      }\n      if (elements.includes(oneChar)) {\n        result = [string.slice(0, i), oneChar, string.slice(i + 1, length)];\n        console.log(\"One char result\", result);\n      }\n    }\n  }\n  useEffect(() => {\n    breakify(firstName);\n  }, [firstName]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: firstName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: lastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setFirstName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: e => setLastName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Breakify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"vqUYQ07cCk7WHirKWrj4Z9WsfD0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","styles","elements","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","firstName","setFirstName","lastName","setLastName","breakify","string","length","result","i","oneChar","toUpperCase","twoChar","includes","slice","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/home/arvind/Documents/Drive A/Temporary/React/try-vite/Breaking Bad/src/components/App.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport styles from \"../styles/App.css\";\nimport elements from \"../elements\";\n\n\nfunction App() {\n\n    const [firstName, setFirstName] = useState(\"\");\n    const [lastName, setLastName] = useState(\"\");\n\n    function breakify(string) {\n        const length = string.length;\n        let result = [\"\", \"\", \"\"];\n        for (let i = 0; i < length; i++) {\n            const oneChar = string[i].toUpperCase();\n            const twoChar = `${oneChar}${string[i + 1]}`;\n\n            if (elements.includes(twoChar)) {\n                result = [string.slice(0, i), twoChar, string.slice(i + 2, length)];\n                console.log(\"Two char result \", result);\n                break;\n            }\n\n            if (elements.includes(oneChar)) {\n                result = [string.slice(0, i), oneChar, string.slice(i + 1, length)];\n                console.log(\"One char result\", result);\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        breakify(firstName);\n    }, [firstName]);\n\n\n    return (\n        <>\n            <div className=\"container\">\n                {/* <h1></h1>\n                <h1></h1> */}\n                <span>{firstName}</span>\n                <span>{lastName}</span>\n\n                <div className=\"container-2\">\n                    <div className=\"row\">\n                        <div className=\"column\">\n                            <label>First Name</label>\n                            <input onChange={(e) => setFirstName(e.target.value)}></input>\n                        </div>\n                        <div className=\"column\">\n                            <label>Last Name</label>\n                            <input onChange={(e) => setLastName(e.target.value)}></input>\n                        </div>\n                    </div>\n\n                    <button>Breakify</button>\n                </div>\n\n            </div>\n        </>\n    )\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}